

- Statemachine einbauen
	- Status des Menus in Abhängigkeit der Zeit
	- Eingabe: Menu, Datum
	- Rückgabe : [akt. Status, [mögliche Status von dem akt. Status aus]]
	- Status
		buchbar, stornierbar, überbuchbar, freigebbar (Sind das alle Status?)


- Anfragen werden zusätzlich per Mail an Anja gesendet.
- Button einfügen, mit dem man eine Mail an alle Esser schickt. Text : "Die Speisen für die kommende Woche wurden erfasst."
		

- Regel : Bis Montag 8:00 Uhr darf man sich anlegen
	- KW Hnadling einführen


-Datenbank
	- init Admin in DB erstellen
	- Datenbank Migration
		- Tabelle für die Versionen der Migration erstellen 
		- Ablauf: komplettes Backup, Migration der Tabellen, Migration der Daten, Version der Migration einfügen.

- Smell
	Erzeugung von Essern darf nicht an 2 Stellen passieren!

- Validierungen
	- Menu Erfassung: Datum darf nicht kleiner als das aktuelle sein

- Verwaltung der Esser (nice to have)
	- Zustände wie comfirmed werden mit einem farblichen Image gekennzeichnet.


- Registrierung eines neuen Essers
  - Token wird generiert und Beziehung zu Esser gespeichert.
  - Link wird Token anstatt Esser Id enthalten
001  - Freigabe des Essers wird durch Admin durch geführt
  -- Registrierung eines neuen Essers
  - Token wird generiert und Beziehung zu Esser gespeichert.
  - Link wird Token anstatt Esser Id enthalten
  - Freigabe des Essers wird durch Admin durch geführt
  -  

- Button Abbruch für Bearbeitung einbauen 



- Release erstellen 

- Verwaltung einzelner Speisen
	- Bilder für einzelne Speisen einfügen.

- Anfrage nach Stornierung wieder aus Queue entfernen. Mal schauen, wie ich das mache.

- Kennzeichen im Booking aufnehmen, dass Esser durch Anfrage gebucht wurde. (für Auswertung interessant)


- Kennzeichen in Menu, dass ein Essen durch Anja freigegeben wurde. danach kann mit dem Essen nichts mehr gemacht werden.
	Kein Löschen  möglich, aber noch das Hinzufügen von Essern.



. Logik des Menu Status in das Modell integrieren.
	get_state() ->  "free"    -> man kann buchen, wenn man noch nicht gebucht hat und Menudatum > akt. Datum 
					"booked"  -> man hat gebucht, wenn ein Booking Eintrag vorliegt
					"request" -> man kann eine Anfrage stellen, wenn keine Slots mehr vefügbar sind und Menudatum > akt. Datum
					"finished"-> Essen ist gegessen, wenn Menudatum <= akt. Datum.

Regeln
	
- Ein Tag vorher, aber bis max. 15:00 Uhr. 

	Beispiel :

	Essen       : 2012-09-09 12:00
	Buchung     : 2012-09-09 16:00
	 
	-> Buchung nicht mehr möglich, da Differenz < 20 Stunden
	Es darf eine Differenz von 21 Stunden sein
	
	Essen :  2012-09-09 12:00
			 2012-09-08 15:00 




- Stornierung nicht möglich 24 Stunden. Ein Tag vorher, aber nur bis 15:00 Uhr
	http://schemecookbook.org/Erlang/TimeToEpoch
	
	Beispiel :
	
	Essen       : 2012-09-09 12:00
	Stornierung : 2012-09-08 16:00
	
	-> nicht mehr möglich, da Differenz < 24 Stunden
	
-------------------------------------------------------------	
BUGS

- Nach dem Löschen eines Menus wird die index Seite nicht richtig refreshed
- Beim Verkleinern des Menus muss das Menu geschlossen werden.
- Die Grössen der einzelnen Felder müssen dynamisch änderbar sein.
-------------------------------------------------------------	

-------------------------------------------------------------	
Refactoring:

- case entfernen
	- speiseplan_eater_controller
-------------------------------------------------------------	
	

-------------------------------------------------------------	
Future

- SMS Versand für diverse Situationen
- Anja Mail schicken, wenn Esser gebucht haben. (wird nicht gemacht)
- Grafische Aufbereitung (z.B. Anzahl Buchung über Zeit)
- Konfiguration in boss.config einfügen. (z.B. feste Mail Adressen )
-------------------------------------------------------------	

-------------------------------------------------------------	
NO-IP
	sudo noip2

-------------------------------------------------------------	

Fertige Aufgaben

- Notes
	- Es muss möglich sein, das ein Admin Notizen erfassen kann, damit diese dann dem Esser auf der actual Seite 
	präsentiert wird. (Anmerkung : nur eine Notiz)
	- Auf der actual Seite wird in folgender Reihenfolge angezeigt : Das aktuelle Essen, die Notiz,  Heute bleibt die Küche kalt (ist das nicht eine Notiz?)
- Prüfung der Regeln muss im Controller durch geführt werden!
- Wenn das Essen fertig ist, Button für "Essen ist fertig" und dann wird Mail an alle gebuchten Esser gesendet 
- Stornierung im Controller um Abfrage "is_in_time" erweitern (fertig)
- CSV enthält : Name,Intern Flag, [Datum], Summe (fertig)
- Rechnungslauf für alle Esser und einen Monat 
- CSV Link erstellen anbieten
- Rechungsstellung füe einen Esser. Er kann eine Zeitspanne wählen und bekommt dann die Liste der Einträge.
  Wie hoch sind meine Kosten für den eingebenen Zeitraum (Esser)? 
- Leerstellung aus dem Datum entfernen oder mit Nullen auffüllen. Bsp.: 2012-1-1 oder 2012-01-01 
- Raspberry Pi aufsetzen
- Funktion Mahlzeit im admin controller implementieren. (fertig)
- CSV generieren für einen bestimmten Zeitraum (fertig)
- Sollte es keine SLots mehr geben, dann hat der Esser die Möglichkeit an Anja zu mailen "Anfrage stellen". Damit wird eine Mail an Anja generiert und gesendet.(fertig)
- Created_Date im Menu einführen, damit die zeitliche Überprüfung daran gemessen werden kann.
- Get in touch with an eater. Möglich Esser an zu mailen über Liste der Esser. (fertig)
- Nach Datum sortieren. (absteigend) (fertig)
- Modelle auf Erland Date/Time umbauen (fertig)
- Refactoring der Datum Werte im Booking. ... müssen Datum und Zeit enthalten.(fertig)
- Infos über andere Teilnehmer aus Speiseplan Ansicht entferne (fertig)
- Infos über Teilnehmer in Admin Ansicht einbauen (fertig)
- Mail an aller Esser eines Tages, dass das Essen ausfällt (fertig)
- Nachträgliches Hinzufügen von Essern, aber nur durch den Admin (Anja) (fertig)
- Bearbeitung von Einträgen. Speisen und Esser (fertig)
- Bearbeitung von Einträgen.  Esser (fertig)
- Liste der Esser, die vegetarisches Essen bestellt haben anzeigen. (fertig) 
- Registrierungs Seite einbauen. (fertig)
- Refactoring: Login in eigenen Controller auslagern. (fertig)
- Anzeige der Esser, die vegetarisch gebucht haben. (fertig)

Listen 

- Liste der Teilnehmer von aktuellen Tag plus 5 leerer Felder für Nachzügler.
- Umsatz von einem Monat, gegliedert in Tagen.
  Beispiel:
  Von 01.01.2012 - 30.01.2012
  
  Datum       Anzahl Teilnehmer Einnahmen
  01.01.2012        10            300

  Gesamt:                         300  

-------------------------------------------------------------	
BUGS

- Nach dem Löschen eines Menus wird die index Seite nicht richtig refreshed

-------------------------------------------------------------	
